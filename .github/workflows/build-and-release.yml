name: Build and Release Extension

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release'
        type: boolean
        default: true
      release_name:
        description: 'Release name (leave empty for automatic)'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build extension
        run: npm run build
      
      - name: Zip dist directory
        run: |
          cd dist
          zip -r ../typing-extension.zip .
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: typing-extension
          path: typing-extension.zip
          retention-days: 7
  
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.create_release == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: typing-extension
      
      - name: Get version from package.json
        if: github.event.inputs.release_name == ''
        id: package_version
        run: |
          echo "Using automatic version naming"
          echo "VERSION=$(date +'v%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT
      
      - name: Set release name
        id: release_name
        run: |
          if [ "${{ github.event.inputs.release_name }}" != "" ]; then
            echo "RELEASE_NAME=${{ github.event.inputs.release_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]; then
            echo "RELEASE_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_NAME=${{ steps.package_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: typing-extension.zip
          tag_name: ${{ steps.release_name.outputs.RELEASE_NAME }}
          name: "Typing Extension ${{ steps.release_name.outputs.RELEASE_NAME }}"
          draft: false
          prerelease: false
          generate_release_notes: true
